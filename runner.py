from Examples import ExampleRunner

from Algorithms.RAMMachine import *

commands1 = [
	['E', 2],		  # 1
	['->', 3],		  # 2
	['?', 4, 1],	  # 3
	['->', 5],	  	  # 4
	['?', 6, 1],	  # 5
	['!', None]		  # 6
]

commands2 = [
	['E', 2],  # 1
	['->', 3],  # 2
	['?', 4, 5],  # 3
	['V', 6],  # 4
	['->', 3],  # 5
	['->', 7],  # 6
	['?', 9, 8],  # 7
	['!', None],  # 8
	['<-', 10],  # 9
	['?', 11, 9],  # 10
	['->', 1],  # 11
]

commands3 = [
	['?', 2, 3],
	['->', 1],
	['<-', 4],
	['V', 5],
	['!', None]
]

commands4a = [
	['?', 2, 3],
	['->', 1],
	['E', 4],
	['->', 5],
	['?', 6, 4],
	['->', 7],
	['?', 8, 18],
	['V', 9],
	['->', 10],
	['V', 11],
	['<-', 12],
	['?', 13, 11],
	['<-', 14],
	['?', 15, 16],
	['!', None],
	['<-', 17],
	['?', 1, 16],
	['->', 7]
]

commands4b = [
	['?', 2, 3],	# 1
	['->', 1],		# 2
	['E', 4],		# 3
	['->', 5],		# 4
	['?', 6, 4],	# 5
	['->', 7],		# 6
	['?', 8, 20],	# 7
	['V', 9],		# 8
	['->', 10],		# 9
	['V', 11],		# 10
	['->', 12],		# 11
	['V', 13],		# 12
	['<-', 14],		# 13
	['?', 15, 13],	# 14
	['<-', 16],		# 15
	['?', 17, 18],	# 16
	['!', None],	# 17
	['<-', 19],		# 18
	['?', 1, 18],	# 19
	['->', 7]		# 20
]

commands4c = [
	['E', 2],	  # 1
	['->', 3],	  # 2
	['?', 4, 2],  # 3
	['->', 5],	  # 4
	['?', 6, 4],  # 5
	['V', 7],	  # 6
	['<-', 8],	  # 7
	['?', 9, 7],  # 8
	['<-', 10],	  # 9
	['?', 11, 9], # 10
	['V', 12],	  # 11
	['->', 13],	  # 12
	['?', 14, 1], # 13
	['<-', 15],	  # 14
	['?', 16, 14],# 15
	['->', 17],	  # 16
	['E', 18],	  # 17
	['->', 19],	  # 18
	['?', 20, 18],# 19
	['->', 21],	  # 20
	['E', 22],	  # 21
	['->', 23],	  # 22
	['?', 24, 22],# 23
	['->', 25],	  # 24
	['?', 26, 24],# 25
	['V', 27],	  # 26
	['<-', 28],	  # 27
	['?', 28, 27],# 28
	['<-', 30],	  # 29
	['?', 34, 21],# 30
	['V', 32],	  # 31
	['->', 33],	  # 32
	['?', 34, 21],# 33
	['<-', 35],	  # 34
	['?', 36, 34],# 35
	['<-', 37],	  # 36
	['?', 42, 38],# 37
	['<-', 39],	  # 38
	['?', 40, 38],# 39
	['->', 17],	  # 40
	['->', 42],	  # 41
	['->', 43],	  # 42
	['?', 45, 44],# 43
	['E', 42],	  # 44
	['!', None]	  # 45
]
"""	
	['?', 28, 27],	# 26	Повернення в зворотньому напрямку через другий масив
	['<-', 26],		# 27
	['<-', 29],		# 28	Запам'ятовування останньої одинички першого масиву
	['E', 30],  	# 29
	['->', 31],  	# 30	Проходження вперед по другому масиву
	['E', 32],		# 31
	['->', 33],		# 32
	['V', 34],		# 33
	['->', 35],  	# 34
	['?', 36, 34],  # 35

	

	['<-', 6],		# 5		Перший раз запам'ятовуємо останню одиничку масиву
	['E', 7],		# 6
	['->', 8],		# 7		Виставляємо стартові точки масивів
	['V', 9],		# 8
	['->', 10],		# 9
	['->', 11],		# 10
	['V', 12],		# 11
	['?', 14, 13],  # 12	Проходимо другий масив в зворотньому напрямку
	['<-', 12],		# 13
	['<-', 15],		# 14	Проходимо перший масив в зворотньому напрямку
	['?', 16, 14],	# 15
	['<-', 17],		# 16
	['?', 26, 18],	# 17	Перевірка чи є одинички в початковому масиві
	['E', 19],		# 18	Запам'ятовування останньої одинички масиву
	['->', 20],		# 19
	['V', 21],		# 20	Доповнюємо масиви
	['?', 23, 22],	# 21	Пробігаємо обидва масиви
	['->', 21],		# 22
	['->', 24],		# 23
	['?', 26, 23],	# 24
	['V', 12],		# 25	Доповнюємо масиви і запускаємо цикл поки не вичерпаємо одиники з початкового масиву
"""

commands5 = [
	['?', 2, 3],	  # 1
	['->', 1],		  # 2
	['E', 4],		  # 3
	['->', 5],		  # 4
	['?', 6, 7],	  # 5
	['V', 8],		  # 6
	['->', 14],		  # 7
	['->', 9],		  # 8
	['V', 10],		  # 9
	['->', 11],		  # 10
	['?', 38, 12],	  # 11
	['->', 13],		  # 12
	['?', 40, 39],	  # 13
	['?', 15, 7],	  # 14
	['->', 16],		  # 15
	['V', 17],		  # 16
	['->', 18],		  # 17
	['?', 19, 39],	  # 18
	['<-', 20],		  # 19
	['?', 21, 19],	  # 20
	['<-', 22],		  # 21
	['?', 38, 23],	  # 22
	['<-', 24],		  # 23
	['?', 25, 23],	  # 24
	['->', 26],		  # 25
	['E', 27],		  # 26
	['->', 28],		  # 27
	['?', 29, 31],	  # 28
	['->', 30],		  # 29
	['?', 6, 29],	  # 30
	['->', 32],		  # 31
	['?', 33, 31],	  # 32
	['V', 34],		  # 33
	['->', 35],		  # 34
	['V', 36],		  # 35
	['->', 37],		  # 36
	['?', 19, 39],	  # 37
	['E', 1],		  # 38
	['V', 1],		  # 39
	['!', None]
]

if __name__ == '__main__':
	program = [
		LOAD(1, '='),
		STORE(1),
		STORE(2),
		READ(4),
		LOAD(1, label='cycle'),
		ADD(2),
		STORE(3),
		LOAD(2),
		STORE(1),
		LOAD(3),
		STORE(2),
		LOAD(2),
		SUB(4),
		JGTZ('greater'),
		JUMP('cycle'),
		WRITE(3, label='greater'),
		HALT()
	]
	
	RAMMachine(program).exec()
